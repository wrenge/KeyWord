@page "/devices"
@using KeyWord.Admin.Services
@using KeyWord.Communication

@inject DevicesService DevicesService

<div class="container-fluid p-4" style="max-width: 900px">
    <div class="mb-5 p-5 bg-light rounded">
        <div class="container">
            <h1 class="display-4">Devices</h1>
            <p class="lead">You can see the list of your devices and change or delete them.</p>
        </div>
    </div>
    <button class="btn btn-primary mb-4" @onclick="OnAddDeviceBtn_Click">
        Add Device
    </button>
    <div class="row mb-4 g4">
        @foreach (var device in _devices)
        {
            <div class="col-lg-4" style="height: 200px">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@device.Name</h5>
                        <h6 class="card-subtitle mb-2 text-muted">iOS</h6>
                        <p class="card-text">ID: @device.Id</p>
                        <div class="d-flex flex-row position-absolute bottom-0" style="padding-bottom: inherit">
                            <button class="btn btn-outline-primary me-2" data-bs-toggle="modal" data-bs-target="#renameModal" @onclick="() => OnEditDeviceBtn_Click(device)">Edit</button>
                            <button class="btn btn-outline-danger me-2" @onclick="async () => await OnRemoveDeviceBtn_Click(device.Id)">Remove</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Rename -->
<div class="modal fade" id="renameModal" tabindex="-1" aria-labelledby="renameModalLabel" aria-hidden="true">
    <div class="modal-dialog" @onabort="() => _editedDevice = null">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="renameModalLabel">Rename device</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <label for="deviceNameInput" class="form-label">Device name</label>
                <input @bind="_deviceNewName" type="text" class="form-control" id="deviceNameInput" placeholder="My cool device">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#renameModal" @onclick="OnRenameDeviceSubmitBtn_Click">Save changes</button>
            </div>
        </div>
    </div>
</div>


@code {
    private Device[] _devices = Array.Empty<Device>();
    private Device? _editedDevice = null;
    private string _deviceNewName = "";

    protected override async Task OnInitializedAsync()
    {
        await RefreshDeviceList();
    }

    private async Task RefreshDeviceList()
    {
        _devices = (await DevicesService.GetDevicesList())?.ToArray() ?? Array.Empty<Device>();
    }

    private void OnAddDeviceBtn_Click(MouseEventArgs obj)
    {
        throw new NotImplementedException();
    }

    private void OnEditDeviceBtn_Click(Device device)
    {
        _editedDevice = device;
        _deviceNewName = device.Name;
    }

    private async Task OnRemoveDeviceBtn_Click(string deviceId)
    {
        await DevicesService.RemoveDevice(deviceId);
        await RefreshDeviceList();
    }

    private async Task OnRenameDeviceSubmitBtn_Click(MouseEventArgs obj)
    {
        if (_editedDevice == null)
            throw new NullReferenceException(nameof(_editedDevice));
        await DevicesService.RenameDevice(_editedDevice.Id, _deviceNewName);
        await RefreshDeviceList();
    }

}